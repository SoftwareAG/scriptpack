plugins {
    //id "maven-publish"
    id "ivy-publish"
    id "java"
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
}

project.afterEvaluate {
    configure(javaProjects()) {
        //apply plugin: "maven-publish"
        apply plugin: "ivy-publish"
        apply plugin: "java"
        //apply plugin: 'com.jfrog.artifactory'

        //artifactoryPublish.skip = true
        //artifactoryPublish.dependsOn('build')

        publishing {
            repositories {
                //jcenter()
                /*maven {
                    name = "GitHubPackages"
                    url = uri("https://maven.pkg.github.com/mmkamburova/scriptpack")
                    credentials {
                        username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                        password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
                    }
                }*/
                ivy {
                    name = "GitHubPackages"
                    url = uri("https://maven.pkg.github.com/mmkamburova/scriptpack")
                    credentials {
                        username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                        password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
                    }
                }
            }
            publications {
                /*gpr(MavenPublication) {
                    from(components.java)
                }*/
                ivy(IvyPublication) {
                    //organisation = 'com.softwareag.ext'
                    //module = 'project1-sample'
                    //revision = '1.1'
                    //descriptor.status = 'integration'
                    //descriptor.branch = 'develop'
                    //descriptor.extraInfo 'http://my.namespace', 'myElement', 'Some value'

                    from components.java
                    artifact(sourceJar) {
                        type "source"
                        extension "src.jar"
                        conf "runtime"
                    }
                    //artifact source: 'my-docs-file.htm', classifier: 'docs', extension: 'html', builtBy: genDocs
                    descriptor {
                        license {
                          name = "Custom License"
                        }
                        author {
                          name = "Custom Name"
                        }
                        description {
                          text = "Custom Description"
                        }
                    }
                }
            }
        }
        /*artifactoryPublish {
            publications(publishing.publications.gpr)
        }*/
    }
}

def javaProjects() {
    subprojects.findAll { new File(it.projectDir, 'src').directory }
}
